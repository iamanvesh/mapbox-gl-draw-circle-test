{"version":3,"sources":["Map.js","App.js","serviceWorker.js","index.js"],"names":["ReactMap","ReactMapboxGl","accessToken","process","mapboxProps","style","zoom","containerStyle","height","width","Map","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onMapLoaded","map","addControl","draw","what","notifyParent","features","onFeaturesUpdated","on","e","MapboxDraw","displayControlsDefault","userProperties","defaultMode","clickBuffer","touchBuffer","modes","objectSpread","draw_circle","CircleMode","direct_select","DirectMode","simple_select","SimpleSelectMode","drag_circle","DragCircleMode","console","log","getAll","setTimeout","bind","assertThisInitialized","prevProps","prevState","snapshot","mode","length","deleteAll","changeMode","_this2","react_default","a","createElement","assign","onStyleLoad","React","Component","shapes","key","value","App","initialState","selectedShape","state","callback","get","prototype","classes","feature","center","properties","isCircle","coord","toFixed","className","src_Map","setState","shapeSelectContainer","FormControl","Select","onChange","find","shape","target","inputProps","name","id","MenuItem","IconButton","onClick","Delete","textContainer","concat","join","radiusInKm","withStyles","theme","zIndex","position","top","left","verticalAlign","right","bottom","background","paddingLeft","paddingRight","Boolean","window","location","hostname","match","ReactDOM","render","react_router_dom","basename","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+PAMMA,EAAWC,YAAc,CAAEC,YAAaC,qGAExCC,EAAc,CAClBC,MAAO,qCACPC,KAAM,CAAC,IACPC,eAAgB,CACdC,OAAQ,QACRC,MAAO,SA0DIC,cApDb,SAAAA,EAAaC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IAClBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KA+BRQ,YAAc,SAAAC,GACZA,EAAIC,WAAWT,EAAKU,MACpBV,EAAKW,OAEL,IAAMC,EAAe,SAACC,GAAD,OAAcb,EAAKD,MAAMe,kBAAkBD,IAChEL,EAAIO,GAAG,cAAe,SAAAC,GAAC,OAAIJ,EAAaI,EAAEH,YAC1CL,EAAIO,GAAG,cAAe,SAAAC,GAAC,OAAIJ,EAAaI,EAAEH,YAC1CL,EAAIO,GAAG,cAAe,SAAAC,GAAC,OAAIJ,EAAaI,EAAEH,aArC1Cb,EAAKU,KAAO,IAAIO,IAAW,CACzBC,wBAAwB,EACxBC,gBAAgB,EAChBC,YAAa,cACbC,YAAa,GACbC,YAAa,GACbC,MAAMtB,OAAAuB,EAAA,EAAAvB,CAAA,GACDgB,IAAWM,MADX,CAEHE,YAAaC,IACbC,cAAeC,IACfC,cAAeC,IACfC,YAAaC,QAIjBhC,EAAKW,KAAO,WACVsB,QAAQC,IAAI/B,KAAKO,KAAKyB,SAAStB,UAC/BuB,WAAWjC,KAAKQ,KAAM,MACtB0B,KAHUpC,OAAAqC,EAAA,EAAArC,CAAAD,IAjBMA,kFAuBDuC,EAAWC,EAAWC,GACnCF,EAAUG,OAASvC,KAAKJ,MAAM2C,MAC9BvC,KAAKJ,MAAMc,SAAS8B,SAAWxC,KAAKO,KAAKyB,SAAStB,SAAS8B,SAC7DV,QAAQC,IAAI/B,KAAKJ,MAAM2C,MACvBvC,KAAKO,KAAKkC,YACVzC,KAAKO,KAAKmC,WAAW1C,KAAKJ,MAAM2C,wCAe3B,IAAAI,EAAA3C,KACP,OACE4C,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC7D,EAADa,OAAAiD,OAAA,GAAc1D,EAAd,CAA2B2D,YAAa,SAAA3C,GAAG,OAAIsC,EAAKvC,YAAYC,eA/CtD4C,IAAMC,+DCalBC,EAAS,CACb,CAAEC,IAAK,EAAGC,MAAO,SAAUd,KAAM,eACjC,CAAEa,IAAK,EAAGC,MAAO,cAAed,KAAM,eACtC,CAAEa,IAAK,EAAGC,MAAO,UAAWd,KAAM,gBAClC,CAAEa,IAAK,EAAGC,MAAO,OAAQd,KAAM,qBAG3Be,cAEJ,SAAAA,EAAY1D,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAsD,IACjBzD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwD,GAAAnD,KAAAH,KAAMJ,KACD2D,aAAe,CAClBC,cAAeL,EAAO,GACtBZ,KAAMY,EAAO,GAAGZ,KAChB7B,SAAU,IAEZb,EAAK4D,MAAL3D,OAAAuB,EAAA,EAAAvB,CAAA,GAAkBD,EAAK0D,cAPN1D,wEAUV4D,EAAOC,GACd5D,OAAA6D,EAAA,EAAA7D,QAAAI,EAAA,EAAAJ,CAAAwD,EAAAM,WAAA,WAAA5D,MAAAG,KAAAH,KAAeyD,EAAOC,GACtB5B,QAAQC,IAAI,yCAGL,IAAAY,EAAA3C,KACC6D,EAAY7D,KAAKJ,MAAjBiE,QACFC,EAAU9D,KAAKyD,MAAM/C,SAAS,GAC9BqD,EAASD,GAAWA,EAAQE,WAAWC,SACzCH,EAAQE,WAAWD,OAAO1D,IAAI,SAAA6D,GAAK,OAAIA,EAAMC,QAAQ,KAAM,GAC/D,OACEvB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKsB,UAAWP,EAAQxD,KACtBuC,EAAAC,EAAAC,cAACuB,EAAD,CACE1D,kBACE,SAACD,GAAD,OAAciC,EAAK2B,SAAS,CAAC5D,SAAUA,KAEzCA,SAAUV,KAAKyD,MAAM/C,SACrB6B,KAAMvC,KAAKyD,MAAMlB,QAErBK,EAAAC,EAAAC,cAAA,OAAKsB,UAAWP,EAAQU,sBACtB3B,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,KACE5B,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CACEpB,MAAOrD,KAAKyD,MAAMD,cAAcJ,IAAMpD,KAAKyD,MAAMD,cAAcJ,IAAM,EACrEsB,SAAU,SAAC7D,GACT,IAAM2C,EAAgBL,EAAOwB,KAAK,SAAAC,GAAK,OAAIA,EAAMxB,MAAQvC,EAAEgE,OAAOxB,QAClEV,EAAK2B,SAAS,CACZd,cAAeA,EACfjB,KAAMiB,EAAcjB,KACpB7B,SAAU,MAGdoE,WAAY,CAACC,KAAM,QAASC,GAAI,mBAE9B7B,EAAO9C,IAAI,SAAAuE,GAAK,OACdhC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAU7B,IAAKwB,EAAMxB,IAAKC,MAAOuB,EAAMxB,KAAMwB,EAAMvB,WAK3DT,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAYC,QAAS,kBAAMxC,EAAK2B,SAALxE,OAAAuB,EAAA,EAAAvB,CAAA,GAAmB6C,EAAKY,iBACjDX,EAAAC,EAAAC,cAACsC,EAAA,EAAD,QAGJxC,EAAAC,EAAAC,cAAA,OAAKsB,UAAWP,EAAQwB,eACtBzC,EAAAC,EAAAC,cAAA,qBAAAwC,OAAgBvB,EAAOwB,KAAK,MAA5B,MACA3C,EAAAC,EAAAC,cAAA,oBAAAwC,OAEexB,GAAWA,EAAQE,WAAWC,SAAWH,EAAQE,WAAWwB,WAAWrB,QAAQ,GAAK,KAFnG,kBA1DQlB,IAAMC,WAqETuC,cApGA,SAAAC,GAAK,MAAK,CACvBrF,IAAK,CACHsF,QAAS,EACTC,SAAU,WACVC,IAAK,EACLC,KAAM,EACNpG,MAAO,QAET6E,qBAAsB,CACpBqB,SAAU,WACVG,cAAe,SACfC,MAAO,GACPH,IAAK,IAEPR,cAAe,CACbO,SAAU,WACVK,OAAQ,GACRH,KAAM,GACNI,WAAY,OACZC,YAAa,GACbC,aAAc,MAgFHX,CAAmBnC,GC/Fd+C,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,uECXNC,IAASC,OACP/D,EAAAC,EAAAC,cAAC8D,EAAA,EAAD,CACEC,SAAUzH,+BACVwD,EAAAC,EAAAC,cAACgE,EAAD,OAEFC,SAASC,eAAe,SDqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.df7c1230.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactMapboxGl from \"react-mapbox-gl\";\nimport MapboxDraw from \"@mapbox/mapbox-gl-draw\";\nimport \"@mapbox/mapbox-gl-draw/dist/mapbox-gl-draw.css\";\nimport {CircleMode, DirectMode, DragCircleMode, SimpleSelectMode,} from \"mapbox-gl-draw-circle\";\n\nconst ReactMap = ReactMapboxGl({ accessToken: process.env.REACT_APP_MAPBOX_ACCESS_TOKEN });\n\nconst mapboxProps = {\n  style: \"mapbox://styles/mapbox/streets-v11\",\n  zoom: [13],\n  containerStyle: {\n    height: \"100vh\",\n    width: \"100%\",\n  }\n};\n\n\nclass Map extends React.Component {\n  constructor (props) {\n    super(props);\n    this.draw = new MapboxDraw({\n      displayControlsDefault: false,\n      userProperties: true,\n      defaultMode: \"draw_circle\",\n      clickBuffer: 10,\n      touchBuffer: 10,\n      modes: {\n        ...MapboxDraw.modes,\n        draw_circle: CircleMode,\n        direct_select: DirectMode,\n        simple_select: SimpleSelectMode,\n        drag_circle: DragCircleMode\n      }\n    });\n\n    this.what = function() {\n      console.log(this.draw.getAll().features);\n      setTimeout(this.what, 2000);\n    }.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevProps.mode !== this.props.mode ||\n        this.props.features.length !== this.draw.getAll().features.length) {\n      console.log(this.props.mode);\n      this.draw.deleteAll();\n      this.draw.changeMode(this.props.mode);\n    }\n  }\n\n  onMapLoaded = map => {\n    map.addControl(this.draw);\n    this.what();\n\n    const notifyParent = (features) => this.props.onFeaturesUpdated(features);\n    map.on(\"draw.create\", e => notifyParent(e.features));\n    map.on(\"draw.update\", e => notifyParent(e.features));\n    map.on(\"draw.delete\", e => notifyParent(e.features));\n\n  };\n\n  render() {\n    return (\n      <div>\n        <ReactMap {...mapboxProps} onStyleLoad={map => this.onMapLoaded(map)} />\n      </div>\n    );\n  }\n}\n\nexport default Map;\n","import React from 'react';\nimport './App.css';\nimport Map from \"./Map\";\nimport {FormControl, IconButton, MenuItem, Select, withStyles} from '@material-ui/core';\nimport {Delete} from \"@material-ui/icons\";\n\n\nconst styles = theme => ({\n  map: {\n    zIndex: -1,\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100%'\n  },\n  shapeSelectContainer: {\n    position: 'absolute',\n    verticalAlign: 'middle',\n    right: 16,\n    top: 16\n  },\n  textContainer: {\n    position: 'absolute',\n    bottom: 32,\n    left: 16,\n    background: '#eee',\n    paddingLeft: 16,\n    paddingRight: 16,\n  }\n});\n\nconst shapes = [\n  { key: 1, value: 'Circle', mode: 'draw_circle' },\n  { key: 2, value: 'Drag Circle', mode: 'drag_circle' },\n  { key: 3, value: 'Polygon', mode: 'draw_polygon' },\n  { key: 4, value: 'Line', mode: 'draw_line_string' },\n];\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.initialState = {\n      selectedShape: shapes[0],\n      mode: shapes[0].mode,\n      features: []\n    };\n    this.state = { ...this.initialState };\n  }\n\n  setState(state, callback) {\n    super.setState(state, callback);\n    console.log('what');\n  }\n\n  render() {\n    const { classes } = this.props;\n    const feature = this.state.features[0];\n    const center = feature && feature.properties.isCircle ?\n        feature.properties.center.map(coord => coord.toFixed(3)) : [];\n    return (\n      <div>\n        <div className={classes.map}>\n          <Map\n            onFeaturesUpdated={\n              (features) => this.setState({features: features})\n            }\n            features={this.state.features}\n            mode={this.state.mode} />\n        </div>\n        <div className={classes.shapeSelectContainer}>\n          <FormControl>\n            <Select\n              value={this.state.selectedShape.key ? this.state.selectedShape.key : 0}\n              onChange={(e) => {\n                const selectedShape = shapes.find(shape => shape.key === e.target.value);\n                this.setState({\n                  selectedShape: selectedShape,\n                  mode: selectedShape.mode,\n                  features: []\n                })\n              }}\n              inputProps={{name: 'shape', id: 'shape-selector'}}>\n              {\n                shapes.map(shape =>\n                  <MenuItem key={shape.key} value={shape.key}>{shape.value}</MenuItem>\n                )\n              }\n            </Select>\n          </FormControl>\n          <IconButton onClick={() => this.setState({ ...this.initialState })}>\n            <Delete />\n          </IconButton>\n        </div>\n        <div className={classes.textContainer}>\n          <p>{`Center: [${center.join(', ')}]`}</p>\n          <p>\n            {\n              `Radius: ${feature && feature.properties.isCircle ? feature.properties.radiusInKm.toFixed(4) : '--'} kms`\n            }\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter\n    basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}